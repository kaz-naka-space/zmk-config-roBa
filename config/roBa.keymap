#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 1
#define SCROLL 5
#define NUM 2

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt { quick-tap-ms = <300>; };

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        //mkp_exit_AML: mkp_exit_AML {
        //    compatible = "zmk,behavior-macro-one-param";
        //    #binding-cells = <1>;
        //    bindings =
        //        <&macro_press>,
        //        <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
        //        <&macro_pause_for_release>,
        //        <&macro_release>,
        //        <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
        //        <&macro_tap>,
        //        <&sl 6>;
        //    label = "MKP_EXIT_AML";
        //};
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W    &kp E   &kp R         &kp T                                                      &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A           &kp S    &kp D   &kp F         &kp G        &lt 6 KP_DOT                 &lt 6 MINUS      &kp H        &kp J  &kp K      &kp L    &lt 1 ENTER
&kp Z           &kp X    &kp C   &kp V         &kp B        &kp COLON                    &kp SEMICOLON    &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_SHIFT  &lt 7 A  &trans  &kp LEFT_WIN  &lt 2 SPACE  &mt LEFT_CONTROL DELETE      &lt 3 BACKSPACE  &lt 4 SPACE                             &lt 5 ESCAPE
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        NUM {
            bindings = <
&kp LC(SPACE)  &kp N7  &kp N8  &kp N9  &kp MINUS                         &kp KP_PLUS      &trans  &trans    &trans    &trans
&kp N0         &kp N4  &kp N5  &kp N6  &kp KP_SLASH  &none       &none   &kp KP_ASTERISK  &trans  &trans    &trans    &trans
&trans         &kp N1  &kp N2  &kp N3  &kp EQUAL     &none       &none   &kp PERCENT      &trans  &mkp MB1  &mkp MB2  &trans
&trans         &trans  &trans  &trans  &trans        &trans      &trans  &trans                                       &trans
            >;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp QUESTION  &kp AMPERSAND  &kp PIPE              &kp LEFT_BRACE                            &kp RIGHT_BRACE        &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp GRAVE   &kp CARET
&kp AT_SIGN      &kp HASH      &kp DOLLAR     &kp NON_US_BACKSLASH  &kp LEFT_PARENTHESIS  &none       &none   &kp RIGHT_PARENTHESIS  &trans             &trans            &kp COLON   &kp SEMICOLON
&trans           &trans        &trans         &trans                &kp LEFT_BRACKET      &none       &none   &kp RIGHT_BRACKET      &kp UNDERSCORE     &kp COMMA         &kp PERIOD  &kp SLASH
&trans           &trans        &trans         &trans                &trans                &trans      &trans  &trans                                                                  &trans
            >;
        };

        ARROW_FUNCTIONS {
            bindings = <
&kp TAB  &kp F7  &kp F8  &kp F9  &kp F10                           &kp LC(KP_PLUS)   &kp HOME        &kp UP_ARROW    &kp END          &kp LS(LG(S))
&trans   &kp F4  &kp F5  &kp F6  &kp F11       &none       &none   &kp LC(KP_MINUS)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans   &kp F1  &kp F2  &kp F3  &kp F12       &none       &none   &trans            &trans          &trans          &trans           &trans
&trans   &trans  &trans  &trans  &kp LEFT_ALT  &trans      &trans  &trans                                                             &trans
            >;
        };

        SCROLL {
            bindings = <
&kp TAB         &trans  &trans  &trans  &trans                            &trans  &trans          &kp UP_ARROW    &trans           &trans
&trans          &trans  &trans  &trans  &trans        &trans      &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans          &trans  &trans  &trans  &trans        &trans      &trans  &trans  &trans          &trans          &trans           &trans
&kp LEFT_SHIFT  &trans  &trans  &trans  &kp LEFT_ALT  &trans      &trans  &trans                                                   &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans           &trans       &trans        &trans        &trans        &trans        &trans
&trans  &none   &none   &none   &trans  &bootloader      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans           &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        symboltest {
            bindings = <
&kp EXCLAMATION   &kp QUESTION  &kp CARET   &kp LS(BACKSLASH)  &kp RIGHT_BRACE                      &kp PIPE  &kp AT_SIGN  &kp AMPERSAND  &kp LEFT_BRACE    &kp EQUAL
&kp LEFT_BRACKET  &kp HASH      &kp DOLLAR  &kp BACKSLASH      &kp ASTERISK     &trans      &trans  &trans    &trans       &trans         &kp SINGLE_QUOTE  &trans
&trans            &trans        &trans      &trans             &trans           &trans      &trans  &trans    &trans       &trans         &trans            &trans
&trans            &trans        &trans      &trans             &trans           &trans      &trans  &trans                                                  &trans
            >;
        };
    };
};
